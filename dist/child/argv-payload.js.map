{"version":3,"file":"argv-payload.js","sourceRoot":"","sources":["../../src/child/argv-payload.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,oBAAoB,EAAE,SAAS,EAAE,MAAM,MAAM,CAAC;AAE3E,gBAAgB;AAChB,MAAM,CAAC,MAAM,SAAS,GAAG,yBAAyB,CAAC;AAEnD,gBAAgB;AAChB,MAAM,UAAU,QAAQ,CAAC,MAAW;IAClC,OAAO,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,EAAE;QACrE,CAAC,SAAS,CAAC,oBAAoB,CAAC,EAAE,SAAS,CAAC,kBAAkB;KAC/D,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;AACxB,CAAC;AAED,gBAAgB;AAChB,MAAM,UAAU,UAAU,CAAC,GAAW;IACpC,OAAO,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;AACjF,CAAC","sourcesContent":["import { brotliCompressSync, brotliDecompressSync, constants } from 'zlib';\n\n/** @internal */\nexport const argPrefix = '--brotli-base64-config=';\n\n/** @internal */\nexport function compress(object: any) {\n  return brotliCompressSync(Buffer.from(JSON.stringify(object), 'utf8'), {\n    [constants.BROTLI_PARAM_QUALITY]: constants.BROTLI_MIN_QUALITY,\n  }).toString('base64');\n}\n\n/** @internal */\nexport function decompress(str: string) {\n  return JSON.parse(brotliDecompressSync(Buffer.from(str, 'base64')).toString());\n}\n"]}